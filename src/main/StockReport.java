/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import config.iReport;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author kulakesh
 */
public class StockReport extends javax.swing.JInternalFrame {

    /**
     * Creates new form StockReport
     */
    public StockReport() {
        initComponents();
        try {
            MaskFormatter dateMask = new MaskFormatter("##-##-####");
            dateMask.install(txtFromDate);
        } catch (ParseException e1) {
        }
        txtFromDate.setText(new SimpleDateFormat("dd-MM-yyyy").format(Calendar.getInstance().getTime()));
        try {
            MaskFormatter dateMask = new MaskFormatter("##-##-####");
            dateMask.install(txtToDate);
        } catch (ParseException e1) {
        }
        txtToDate.setText(new SimpleDateFormat("dd-MM-yyyy").format(Calendar.getInstance().getTime()));
        LoadItems();
    }

    private void LoadItems() {
        try {
            cmbItem.removeAllItems();
            cmbItem.addItem(new config.ComboItem("[ALL ITEMS]", ""));
            ResultSet rs1 = new config.RecordSet().Open("SELECT id,name FROM items ORDER BY name");
            while (rs1.next()) {
                cmbItem.addItem(new config.ComboItem(rs1.getString("name"), rs1.getString("id")));
            }
            cmbItem.setSelectedIndex(0);
            rs1.close();
        } catch (Exception e) {
            System.out.println("LoadItems-Error:" + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JFormattedTextField();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cmbItem = new javax.swing.JComboBox();

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(152, 22, 22));
        jLabel2.setText("Sales Report");

        jLabel1.setText("From");

        jLabel3.setText("To");

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Report");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Item");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbItem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton1))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 246, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtToDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Object item = cmbItem.getSelectedItem();
        String value = ((config.ComboItem) item).getValue();
        new config.RecordSet().Execute("DELETE FROM rpt_stock");
        Integer j = 0;

        String sqlQry = "SELECT a.item_id as itm FROM stock_item a, stock b WHERE  b.rdate BETWEEN "
                + "'" + new config.functions().cSqlDate(new config.functions().cDateCalender(txtFromDate.getText())) + "' AND "
                + "'" + new config.functions().cSqlDate(new config.functions().cDateCalender(txtToDate.getText())) + "'"
                +" AND a.stock_id=b.id "
                + " UNION "
                + "SELECT a.item_id as itm FROM sales_item a,sales b WHERE  b.invoice_date BETWEEN "
                + "'" + new config.functions().cSqlDate(new config.functions().cDateCalender(txtFromDate.getText())) + "' AND "
                + "'" + new config.functions().cSqlDate(new config.functions().cDateCalender(txtToDate.getText())) + "'"
                +" AND a.sales_id=b.id ";
        
        //According to client's requirement 
        sqlQry = (value.equals("") ? sqlQry : "SELECT id as itm FROM items WHERE id='" + value + "'");
        ///
        try {
            ResultSet rs1 = new config.RecordSet().Open(sqlQry);
            while (rs1.next()) {
                String sqlQry1 = "SELECT b.rdate as dt FROM stock_item a, stock b WHERE rdate BETWEEN "
                        + "'" + new config.functions().cSqlDate(new config.functions().cDateCalender(txtFromDate.getText())) + "' AND "
                        + "'" + new config.functions().cSqlDate(new config.functions().cDateCalender(txtToDate.getText())) + "'"
                        + " AND a.stock_id=b.id AND a.item_id='" + rs1.getString("itm") + "'"
                        + " UNION "
                        + "SELECT invoice_date as dt FROM sales a,sales_item c WHERE a.invoice_date BETWEEN "
                        + "'" + new config.functions().cSqlDate(new config.functions().cDateCalender(txtFromDate.getText())) + "' AND "
                        + "'" + new config.functions().cSqlDate(new config.functions().cDateCalender(txtToDate.getText())) + "'"
                        + " AND a.id=c.sales_id AND c.item_id='" + rs1.getString("itm") + "'"
                        + " ORDER BY dt";
                ResultSet rs2 = new config.RecordSet().Open(sqlQry1);
                while (rs2.next()) {
                    Integer OpeningStock = 0, Receive = 0, Sale = 0, Return = 0, ClosingStock;

                    /*
                     * OPENING BALANCE
                     */
                    ResultSet rstmp = new config.RecordSet().Open("SELECT IFNULL(SUM(c.qnty),0) as qt FROM stock b, stock_item c "
                            + "WHERE c.stock_id=b.id AND c.item_id = '" + rs1.getString("itm") + "' AND "
                            + "b.rdate < '" + rs2.getString("dt") + "'");
                    if (rstmp.next()) {
                        OpeningStock = rstmp.getInt("qt");
                    }
                    rstmp.close();
                    rstmp = new config.RecordSet().Open("SELECT IFNULL(SUM(c.quantity),0) as qt FROM sales b, sales_item c "
                            + "WHERE c.sales_id=b.id AND c.item_id = '" + rs1.getString("itm") + "' AND "
                            + "b.invoice_date < '" + rs2.getString("dt") + "'");
                    if (rstmp.next()) {
                        OpeningStock = OpeningStock - rstmp.getInt("qt");
                    }
                    rstmp.close();

                    /*
                     * RECEIVE
                     */
                    rstmp = new config.RecordSet().Open("SELECT IFNULL(SUM(c.qnty),0) as qt FROM stock b, stock_item c "
                            + "WHERE c.stock_id=b.id AND c.item_id = '" + rs1.getString("itm") + "' AND "
                            + "b.rdate = '" + rs2.getString("dt") + "'");
                    if (rstmp.next()) {
                        Receive = rstmp.getInt("qt");
                    }

                    /*
                     * SALES
                     */
                    rstmp = new config.RecordSet().Open("SELECT IFNULL(SUM(c.quantity),0) as qt FROM sales b, sales_item c "
                            + "WHERE c.sales_id=b.id AND c.item_id = '" + rs1.getString("itm") + "' AND "
                            + "b.invoice_date = '" + rs2.getString("dt") + "'");
                    if (rstmp.next()) {
                        Sale = rstmp.getInt("qt");
                    }

                    ClosingStock = OpeningStock + Receive - Sale - Return;
                    j++;
                    new config.RecordSet().Execute("INSERT INTO rpt_stock VALUES (" + j + ","
                            + "'" + rs1.getString("itm") + "',"
                            + "'" + rs2.getString("dt") + "',"
                            + OpeningStock + ","
                            + Receive + ","
                            + Sale + ","
                            + Return + ","
                            + ClosingStock + ")");

                }
            }
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            System.out.println(e.getMessage());
            e.printStackTrace();
        }

        iReport rpt1 = new config.iReport();
        rpt1.setPath("stockreport.jasper");
        rpt1.setParam("SUBREPORT_DIR=" + config.Global.AppPath + File.separator + "rpt" + File.separator);
        rpt1.ShowReport();

    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbItem;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JFormattedTextField txtFromDate;
    private javax.swing.JFormattedTextField txtToDate;
    // End of variables declaration//GEN-END:variables
}
